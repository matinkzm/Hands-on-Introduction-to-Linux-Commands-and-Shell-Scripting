#!/bin/bash

# This checks if the number of arguments is correct
# If the number of arguments is incorrect ( $# != 2) print error message and exit
if [[ $# != 2 ]]
then
  echo "backup.sh target_directory_name destination_directory_name"
  exit
fi

# This checks if argument 1 and argument 2 are valid directory paths
if [[ ! -d $1 ]] || [[ ! -d $2 ]]
then
  echo "Invalid directory path provided"
  exit
fi

# [TASK 1]
# set 2 parameters to first and second command line arguements
targetDirectory=$1
destinationDirectory=$2

# [TASK 2]
# display the values
echo "$targetDirectory"
echo "$destinationDirectory"

# [TASK 3]
# define a variable for current time in seconds
currentTS=$(date +%s)

# [TASK 4]
# create a variable using the time variable created before
backupFileName="backup-$currentTS.tar.gz"

# We're going to:
  # 1: Go into the target directory
  # 2: Create the backup file
  # 3: Move the backup file to the destination directory

# To make things easier, we will define some useful variables...

# [TASK 5]
# store the current path
origAbsPath=$(pwd)

# [TASK 6]
# store destination path
cd $destinationDirectory
destAbsPath=$(pwd)

# [TASK 7]
cd $origAbsPath
cd $targetDirectory

# [TASK 8]
# calculate yesterday in seconds
yesterdayTS=$(($currentTS - 24 * 60 * 60))

# create an array
declare -a toBackup

# store all files within the last 24 hours in the array
for file in $(ls) # [TASK 9]
do
  # [TASK 10]
  if ((`date -r $file +%s` > $yesterdayTS))
  then
    # [TASK 11]
    toBackup+=($file)
  fi
done


# [TASK 12]
# compress and archive the file
tar -czvf $backupFileName ${toBackup[@]}

# [TASK 13]
# move the file to the destination directory
mv $backupFileName $destAbsPath
# Congratulations! You completed the final project for this course!
